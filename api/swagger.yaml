---
swagger: "2.0"
info:
  description: "Raspberry Remote devices."
  version: "1.0.0"
  title: "Devicestore"
host: "localhost:1337"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /devices:
    get:
      description: "Returns all devices from the system that the user has access to"
      operationId: "findDevices"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "device response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/device"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new device in the store.  Duplicates are allowed"
      operationId: "addDevice"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "device"
        description: "Device to add to the store"
        required: true
        schema:
          $ref: "#/definitions/newDevice"
      responses:
        200:
          description: "device response"
          schema:
            $ref: "#/definitions/device"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /devices/{id}:
    get:
      description: "Returns a device based on ID"
      operationId: "findDeviceById"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of device to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "device response"
          schema:
            $ref: "#/definitions/device"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      description: "deletes a single device based on the ID supplied"
      operationId: "deleteDevice"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of device to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "device deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /devices/{id}/{state}:
    put:
      description: "Sets state of a device based on ID"
      operationId: "setStateByDeviceId"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of device to fetch"
        required: true
        type: "integer"
        format: "int64"
      - name: "state"
        in: "path"
        description: "state of device to set"
        required: true
        type: "boolean"
      responses:
        200:
          description: "device response"
          schema:
            $ref: "#/definitions/device"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  device:
    type: "object"
    required:
    - "id"
    - "name"
    - "state"
    - "ipAddress"
    - "remotePort"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      ipAddress:
        type: "string"
      remotePort:
        type: "integer"
        format: "int64"
      state:
        type: "boolean"
  newDevice:
    type: "object"
    required:
    - "name"
    - "ipAddress"
    - "remotePort"
    properties:
      name:
        type: "string"
      ipAddress:
        type: "string"
      remotePort:
        type: "integer"
        format: "int64"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"